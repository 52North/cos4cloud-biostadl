version: '3'
services:
  httpd:
    image: 52north/cos4cloud-sta-oidc-httpd
    #build: ./httpd
    networks:
      - backend
    env_file:
      - oidc.env
    ports:
      - 80:80
      - 443:443
    environment:
      HTTPD_LOG_LEVEL: ${HTTPD_LOG_LEVEL}
      HTTPD_SSL_LOG_LEVEL: ${HTTPD_SSL_LOG_LEVEL}
      HTTPD_PROTOCOL: ${HTTPD_PROTOCOL}
      HTTPD_HOST: ${HTTPD_HOST}
      HTTPD_STA_PATH: ${HTTPD_STA_PATH}
      # substitude module does not resolve nested variables, so we have to use /.env
      STA_SERVER_ROOT_URL: ${HTTPD_PROTOCOL}://${HTTPD_HOST}${HTTPD_STA_PATH}/
      # openidc module does not resolve nested variables, so we have to use /.env
      HTTPD_OIDC_REDIRECT_URI: ${HTTPD_PROTOCOL}://${HTTPD_HOST}${HTTPD_STA_PATH}/redirect_uri
    # deploy:
    #   replicas: 2
    #   update_config:
    #     parallelism: 2
    #   restart_policy:
    #     condition: on-failure
  sta:
    image: 52north/cos4cloud-sta-citsci:latest
    networks:
      - backend
    ports:
      - 8080:8080
      - 1883:1883
      - 8883:8883
    environment:
      LOGGING_LEVEL_ROOT: ${STA_LOGGING_LEVEL_ROOT}
      LOGGING_LEVEL_ORG_N52: ${STA_LOGGING_LEVEL_ORG_N52}
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: TRACE
      SPRING_JPA_PROPERTIES_HIBERNATE_SHOW_SQL: "false"
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "false"
      SPRING_HTTP_LOG-REQUEST-DETAILS: "true"
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/sta
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: public
      MQTT_BROKER_PLAINTCP_ENABLED: "true"
      MQTT_BROKER_WEBSOCKET_ENABLED: "true"
      MQTT_BROKER_PERSISTENCE_ENABLED: "false"
      SERVER_PORT: 8080
      SERVER_ROOTURL: "@@STA_SERVER_ROOT_URL@@"
      SERVER_SERVLET_CONTEXT_PATH: /sta
      SERVER_FEATURE_UPDATEFOI: "false"
      SERVER_FEATURE_MQTTPUBLISHTOPICS: Observations
      SERVER_FEATURE_VARIABLEENCODINGTYPE: "false"
      SERVER_FEATURE_HTTPREADONLY: "${STA_HTTP_READ_ONLY}"
      SERVER_FEATURE_MQTTREADONLY: "${STA_MQTT_READ_ONLY}"
      SERVER_FEATURE_ISMOBILE: "false"
    depends_on:
    - database

  database:
    image: postgis/postgis
    networks:
      - backend
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: on-failure
    environment:
      - POSTGRES_DB=sta
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - ALLOW_IP_RANGE=0.0.0.0/0
    # For debug/show purposes!
    ports:
      - 5432:5432

networks:
  #frontend:
  backend:

volumes:
  db-data:
